//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------



namespace SecretImage
{
    public partial class App : global::Windows.UI.Xaml.Markup.IXamlMetadataProvider
    {
        private global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlTypeInfoProvider _provider;

        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(global::System.Type type)
        {
            if(_provider == null)
            {
                _provider = new global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlTypeInfoProvider();
            }
            return _provider.GetXamlTypeByType(type);
        }

        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(string fullName)
        {
            if(_provider == null)
            {
                _provider = new global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlTypeInfoProvider();
            }
            return _provider.GetXamlTypeByName(fullName);
        }

        public global::Windows.UI.Xaml.Markup.XmlnsDefinition[] GetXmlnsDefinitions()
        {
            return new global::Windows.UI.Xaml.Markup.XmlnsDefinition[0];
        }
    }
}

namespace SecretImage.SecretImage_Windows_XamlTypeInfo
{
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks", "4.0.0.0")]    
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal partial class XamlTypeInfoProvider
    {
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlTypeByType(global::System.Type type)
        {
            global::Windows.UI.Xaml.Markup.IXamlType xamlType;
            if (_xamlTypeCacheByType.TryGetValue(type, out xamlType))
            {
                return xamlType;
            }
            int typeIndex = LookupTypeIndexByType(type);
            if(typeIndex != -1)
            {
                xamlType = CreateXamlType(typeIndex);
            }
            if (xamlType != null)
            {
                _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
            }
            return xamlType;
        }

        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlTypeByName(string typeName)
        {
            if (string.IsNullOrEmpty(typeName))
            {
                return null;
            }
            global::Windows.UI.Xaml.Markup.IXamlType xamlType;
            if (_xamlTypeCacheByName.TryGetValue(typeName, out xamlType))
            {
                return xamlType;
            }
            int typeIndex = LookupTypeIndexByName(typeName);
            if(typeIndex != -1)
            {
                xamlType = CreateXamlType(typeIndex);
            }
            if (xamlType != null)
            {
                _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
            }
            return xamlType;
        }

        public global::Windows.UI.Xaml.Markup.IXamlMember GetMemberByLongName(string longMemberName)
        {
            if (string.IsNullOrEmpty(longMemberName))
            {
                return null;
            }
            global::Windows.UI.Xaml.Markup.IXamlMember xamlMember;
            if (_xamlMembers.TryGetValue(longMemberName, out xamlMember))
            {
                return xamlMember;
            }
            xamlMember = CreateXamlMember(longMemberName);
            if (xamlMember != null)
            {
                _xamlMembers.Add(longMemberName, xamlMember);
            }
            return xamlMember;
        }

        global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByName = new global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByType = new global::System.Collections.Generic.Dictionary<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlMember>
                _xamlMembers = new global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlMember>();

        string[] _typeNameTable = null;
        global::System.Type[] _typeTable = null;

        private void InitTypeTables()
        {
            _typeNameTable = new string[57];
            _typeNameTable[0] = "AppStudio.Common.Converters.VisibilityConverter";
            _typeNameTable[1] = "Object";
            _typeNameTable[2] = "AppStudio.Common.Converters.StringVisibilityConverter";
            _typeNameTable[3] = "AppStudio.Common.Converters.BoolToVisibilityConverter";
            _typeNameTable[4] = "AppStudio.Common.Converters.GridLengthConverter";
            _typeNameTable[5] = "AppStudio.Common.Controls.Html2Xaml.Properties";
            _typeNameTable[6] = "Windows.UI.Xaml.DependencyObject";
            _typeNameTable[7] = "String";
            _typeNameTable[8] = "AppStudio.Common.Controls.VariableSizedGrid";
            _typeNameTable[9] = "Windows.UI.Xaml.Controls.GridView";
            _typeNameTable[10] = "Windows.UI.Xaml.Controls.ItemsControl";
            _typeNameTable[11] = "AppStudio.Common.Navigation.NavigationService";
            _typeNameTable[12] = "AppStudio.Common.Commands.ActionCommands";
            _typeNameTable[13] = "AppStudio.Common.Fonts.FontSettings";
            _typeNameTable[14] = "SecretImage.AppFlyouts.PrivacyFlyout";
            _typeNameTable[15] = "Windows.UI.Xaml.Controls.SettingsFlyout";
            _typeNameTable[16] = "Windows.UI.Xaml.Controls.ContentControl";
            _typeNameTable[17] = "SecretImage.ViewModels.PrivacyViewModel";
            _typeNameTable[18] = "AppStudio.Common.ObservableBase";
            _typeNameTable[19] = "AppStudio.Common.Converters.PageHeaderTypeConverter";
            _typeNameTable[20] = "SecretImage.Controls.PageHeaderControl";
            _typeNameTable[21] = "Windows.UI.Xaml.Controls.UserControl";
            _typeNameTable[22] = "Boolean";
            _typeNameTable[23] = "SecretImage.Controls.PageHeaderType";
            _typeNameTable[24] = "System.Enum";
            _typeNameTable[25] = "System.ValueType";
            _typeNameTable[26] = "SecretImage.PageBase";
            _typeNameTable[27] = "Windows.UI.Xaml.Controls.Page";
            _typeNameTable[28] = "SecretImage.Controls.ImageViewer";
            _typeNameTable[29] = "Microsoft.Xaml.Interactivity.Interaction";
            _typeNameTable[30] = "Microsoft.Xaml.Interactivity.BehaviorCollection";
            _typeNameTable[31] = "Windows.UI.Xaml.DependencyObjectCollection";
            _typeNameTable[32] = "Microsoft.Xaml.Interactions.Core.DataTriggerBehavior";
            _typeNameTable[33] = "Microsoft.Xaml.Interactivity.ActionCollection";
            _typeNameTable[34] = "Microsoft.Xaml.Interactions.Core.ComparisonConditionType";
            _typeNameTable[35] = "Microsoft.Xaml.Interactions.Core.GoToStateAction";
            _typeNameTable[36] = "Windows.UI.Xaml.FrameworkElement";
            _typeNameTable[37] = "SecretImage.Controls.YouTubeViewer";
            _typeNameTable[38] = "AppStudio.Common.Commands.SectionHeaderClickCommand";
            _typeNameTable[39] = "System.Windows.Input.ICommand";
            _typeNameTable[40] = "AppStudio.Common.Actions.ActionsCommandBar";
            _typeNameTable[41] = "Windows.UI.Xaml.Controls.CommandBar";
            _typeNameTable[42] = "System.Collections.Generic.List`1<AppStudio.Common.Actions.ActionInfo>";
            _typeNameTable[43] = "AppStudio.Common.Actions.ActionInfo";
            _typeNameTable[44] = "AppStudio.Common.Actions.ActionType";
            _typeNameTable[45] = "SecretImage.MainPage";
            _typeNameTable[46] = "SecretImage.ViewModels.MainViewModel";
            _typeNameTable[47] = "SecretImage.Controls.ErrorNotificationControl";
            _typeNameTable[48] = "AppStudio.Common.Controls.RichTextColumns";
            _typeNameTable[49] = "Windows.UI.Xaml.Controls.Panel";
            _typeNameTable[50] = "Windows.UI.Xaml.Controls.RichTextBlock";
            _typeNameTable[51] = "Windows.UI.Xaml.DataTemplate";
            _typeNameTable[52] = "AppStudio.Common.Commands.ItemClickCommand";
            _typeNameTable[53] = "Windows.UI.Color";
            _typeNameTable[54] = "Byte";
            _typeNameTable[55] = "AppStudio.Common.Converters.RichTextBlockStyleConverter";
            _typeNameTable[56] = "Windows.UI.Xaml.Style";

            _typeTable = new global::System.Type[57];
            _typeTable[0] = typeof(global::AppStudio.Common.Converters.VisibilityConverter);
            _typeTable[1] = typeof(global::System.Object);
            _typeTable[2] = typeof(global::AppStudio.Common.Converters.StringVisibilityConverter);
            _typeTable[3] = typeof(global::AppStudio.Common.Converters.BoolToVisibilityConverter);
            _typeTable[4] = typeof(global::AppStudio.Common.Converters.GridLengthConverter);
            _typeTable[5] = typeof(global::AppStudio.Common.Controls.Html2Xaml.Properties);
            _typeTable[6] = typeof(global::Windows.UI.Xaml.DependencyObject);
            _typeTable[7] = typeof(global::System.String);
            _typeTable[8] = typeof(global::AppStudio.Common.Controls.VariableSizedGrid);
            _typeTable[9] = typeof(global::Windows.UI.Xaml.Controls.GridView);
            _typeTable[10] = typeof(global::Windows.UI.Xaml.Controls.ItemsControl);
            _typeTable[11] = typeof(global::AppStudio.Common.Navigation.NavigationService);
            _typeTable[12] = typeof(global::AppStudio.Common.Commands.ActionCommands);
            _typeTable[13] = typeof(global::AppStudio.Common.Fonts.FontSettings);
            _typeTable[14] = typeof(global::SecretImage.AppFlyouts.PrivacyFlyout);
            _typeTable[15] = typeof(global::Windows.UI.Xaml.Controls.SettingsFlyout);
            _typeTable[16] = typeof(global::Windows.UI.Xaml.Controls.ContentControl);
            _typeTable[17] = typeof(global::SecretImage.ViewModels.PrivacyViewModel);
            _typeTable[18] = typeof(global::AppStudio.Common.ObservableBase);
            _typeTable[19] = typeof(global::AppStudio.Common.Converters.PageHeaderTypeConverter);
            _typeTable[20] = typeof(global::SecretImage.Controls.PageHeaderControl);
            _typeTable[21] = typeof(global::Windows.UI.Xaml.Controls.UserControl);
            _typeTable[22] = typeof(global::System.Boolean);
            _typeTable[23] = typeof(global::SecretImage.Controls.PageHeaderType);
            _typeTable[24] = typeof(global::System.Enum);
            _typeTable[25] = typeof(global::System.ValueType);
            _typeTable[26] = typeof(global::SecretImage.PageBase);
            _typeTable[27] = typeof(global::Windows.UI.Xaml.Controls.Page);
            _typeTable[28] = typeof(global::SecretImage.Controls.ImageViewer);
            _typeTable[29] = typeof(global::Microsoft.Xaml.Interactivity.Interaction);
            _typeTable[30] = typeof(global::Microsoft.Xaml.Interactivity.BehaviorCollection);
            _typeTable[31] = typeof(global::Windows.UI.Xaml.DependencyObjectCollection);
            _typeTable[32] = typeof(global::Microsoft.Xaml.Interactions.Core.DataTriggerBehavior);
            _typeTable[33] = typeof(global::Microsoft.Xaml.Interactivity.ActionCollection);
            _typeTable[34] = typeof(global::Microsoft.Xaml.Interactions.Core.ComparisonConditionType);
            _typeTable[35] = typeof(global::Microsoft.Xaml.Interactions.Core.GoToStateAction);
            _typeTable[36] = typeof(global::Windows.UI.Xaml.FrameworkElement);
            _typeTable[37] = typeof(global::SecretImage.Controls.YouTubeViewer);
            _typeTable[38] = typeof(global::AppStudio.Common.Commands.SectionHeaderClickCommand);
            _typeTable[39] = typeof(global::System.Windows.Input.ICommand);
            _typeTable[40] = typeof(global::AppStudio.Common.Actions.ActionsCommandBar);
            _typeTable[41] = typeof(global::Windows.UI.Xaml.Controls.CommandBar);
            _typeTable[42] = typeof(global::System.Collections.Generic.List<global::AppStudio.Common.Actions.ActionInfo>);
            _typeTable[43] = typeof(global::AppStudio.Common.Actions.ActionInfo);
            _typeTable[44] = typeof(global::AppStudio.Common.Actions.ActionType);
            _typeTable[45] = typeof(global::SecretImage.MainPage);
            _typeTable[46] = typeof(global::SecretImage.ViewModels.MainViewModel);
            _typeTable[47] = typeof(global::SecretImage.Controls.ErrorNotificationControl);
            _typeTable[48] = typeof(global::AppStudio.Common.Controls.RichTextColumns);
            _typeTable[49] = typeof(global::Windows.UI.Xaml.Controls.Panel);
            _typeTable[50] = typeof(global::Windows.UI.Xaml.Controls.RichTextBlock);
            _typeTable[51] = typeof(global::Windows.UI.Xaml.DataTemplate);
            _typeTable[52] = typeof(global::AppStudio.Common.Commands.ItemClickCommand);
            _typeTable[53] = typeof(global::Windows.UI.Color);
            _typeTable[54] = typeof(global::System.Byte);
            _typeTable[55] = typeof(global::AppStudio.Common.Converters.RichTextBlockStyleConverter);
            _typeTable[56] = typeof(global::Windows.UI.Xaml.Style);
        }

        private int LookupTypeIndexByName(string typeName)
        {
            if (_typeNameTable == null)
            {
                InitTypeTables();
            }
            for (int i=0; i<_typeNameTable.Length; i++)
            {
                if(0 == string.CompareOrdinal(_typeNameTable[i], typeName))
                {
                    return i;
                }
            }
            return -1;
        }

        private int LookupTypeIndexByType(global::System.Type type)
        {
            if (_typeTable == null)
            {
                InitTypeTables();
            }
            for(int i=0; i<_typeTable.Length; i++)
            {
                if(type == _typeTable[i])
                {
                    return i;
                }
            }
            return -1;
        }

        private object Activate_0_VisibilityConverter() { return new global::AppStudio.Common.Converters.VisibilityConverter(); }
        private object Activate_2_StringVisibilityConverter() { return new global::AppStudio.Common.Converters.StringVisibilityConverter(); }
        private object Activate_3_BoolToVisibilityConverter() { return new global::AppStudio.Common.Converters.BoolToVisibilityConverter(); }
        private object Activate_4_GridLengthConverter() { return new global::AppStudio.Common.Converters.GridLengthConverter(); }
        private object Activate_5_Properties() { return new global::AppStudio.Common.Controls.Html2Xaml.Properties(); }
        private object Activate_8_VariableSizedGrid() { return new global::AppStudio.Common.Controls.VariableSizedGrid(); }
        private object Activate_11_NavigationService() { return new global::AppStudio.Common.Navigation.NavigationService(); }
        private object Activate_12_ActionCommands() { return new global::AppStudio.Common.Commands.ActionCommands(); }
        private object Activate_13_FontSettings() { return new global::AppStudio.Common.Fonts.FontSettings(); }
        private object Activate_14_PrivacyFlyout() { return new global::SecretImage.AppFlyouts.PrivacyFlyout(); }
        private object Activate_17_PrivacyViewModel() { return new global::SecretImage.ViewModels.PrivacyViewModel(); }
        private object Activate_19_PageHeaderTypeConverter() { return new global::AppStudio.Common.Converters.PageHeaderTypeConverter(); }
        private object Activate_20_PageHeaderControl() { return new global::SecretImage.Controls.PageHeaderControl(); }
        private object Activate_28_ImageViewer() { return new global::SecretImage.Controls.ImageViewer(); }
        private object Activate_30_BehaviorCollection() { return new global::Microsoft.Xaml.Interactivity.BehaviorCollection(); }
        private object Activate_32_DataTriggerBehavior() { return new global::Microsoft.Xaml.Interactions.Core.DataTriggerBehavior(); }
        private object Activate_33_ActionCollection() { return new global::Microsoft.Xaml.Interactivity.ActionCollection(); }
        private object Activate_35_GoToStateAction() { return new global::Microsoft.Xaml.Interactions.Core.GoToStateAction(); }
        private object Activate_37_YouTubeViewer() { return new global::SecretImage.Controls.YouTubeViewer(); }
        private object Activate_40_ActionsCommandBar() { return new global::AppStudio.Common.Actions.ActionsCommandBar(); }
        private object Activate_42_List() { return new global::System.Collections.Generic.List<global::AppStudio.Common.Actions.ActionInfo>(); }
        private object Activate_43_ActionInfo() { return new global::AppStudio.Common.Actions.ActionInfo(); }
        private object Activate_45_MainPage() { return new global::SecretImage.MainPage(); }
        private object Activate_47_ErrorNotificationControl() { return new global::SecretImage.Controls.ErrorNotificationControl(); }
        private object Activate_48_RichTextColumns() { return new global::AppStudio.Common.Controls.RichTextColumns(); }
        private object Activate_55_RichTextBlockStyleConverter() { return new global::AppStudio.Common.Converters.RichTextBlockStyleConverter(); }
        private void VectorAdd_30_BehaviorCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Windows.UI.Xaml.DependencyObject>)instance;
            var newItem = (global::Windows.UI.Xaml.DependencyObject)item;
            collection.Add(newItem);
        }
        private void VectorAdd_33_ActionCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Windows.UI.Xaml.DependencyObject>)instance;
            var newItem = (global::Windows.UI.Xaml.DependencyObject)item;
            collection.Add(newItem);
        }
        private void VectorAdd_42_List(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::AppStudio.Common.Actions.ActionInfo>)instance;
            var newItem = (global::AppStudio.Common.Actions.ActionInfo)item;
            collection.Add(newItem);
        }

        private global::Windows.UI.Xaml.Markup.IXamlType CreateXamlType(int typeIndex)
        {
            global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlSystemBaseType xamlType = null;
            global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlUserType userType;
            string typeName = _typeNameTable[typeIndex];
            global::System.Type type = _typeTable[typeIndex];

            switch (typeIndex)
            {

            case 0:   //  AppStudio.Common.Converters.VisibilityConverter
                userType = new global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_0_VisibilityConverter;
                xamlType = userType;
                break;

            case 1:   //  Object
                xamlType = new global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 2:   //  AppStudio.Common.Converters.StringVisibilityConverter
                userType = new global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_2_StringVisibilityConverter;
                xamlType = userType;
                break;

            case 3:   //  AppStudio.Common.Converters.BoolToVisibilityConverter
                userType = new global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_3_BoolToVisibilityConverter;
                xamlType = userType;
                break;

            case 4:   //  AppStudio.Common.Converters.GridLengthConverter
                userType = new global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_4_GridLengthConverter;
                xamlType = userType;
                break;

            case 5:   //  AppStudio.Common.Controls.Html2Xaml.Properties
                userType = new global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObject"));
                userType.Activator = Activate_5_Properties;
                userType.AddMemberName("Html");
                xamlType = userType;
                break;

            case 6:   //  Windows.UI.Xaml.DependencyObject
                xamlType = new global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 7:   //  String
                xamlType = new global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 8:   //  AppStudio.Common.Controls.VariableSizedGrid
                userType = new global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.GridView"));
                userType.Activator = Activate_8_VariableSizedGrid;
                xamlType = userType;
                break;

            case 9:   //  Windows.UI.Xaml.Controls.GridView
                xamlType = new global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 10:   //  Windows.UI.Xaml.Controls.ItemsControl
                xamlType = new global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 11:   //  AppStudio.Common.Navigation.NavigationService
                userType = new global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_11_NavigationService;
                xamlType = userType;
                break;

            case 12:   //  AppStudio.Common.Commands.ActionCommands
                userType = new global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_12_ActionCommands;
                xamlType = userType;
                break;

            case 13:   //  AppStudio.Common.Fonts.FontSettings
                userType = new global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_13_FontSettings;
                xamlType = userType;
                break;

            case 14:   //  SecretImage.AppFlyouts.PrivacyFlyout
                userType = new global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.SettingsFlyout"));
                userType.Activator = Activate_14_PrivacyFlyout;
                userType.AddMemberName("PrivacyViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 15:   //  Windows.UI.Xaml.Controls.SettingsFlyout
                xamlType = new global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 16:   //  Windows.UI.Xaml.Controls.ContentControl
                xamlType = new global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 17:   //  SecretImage.ViewModels.PrivacyViewModel
                userType = new global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("AppStudio.Common.ObservableBase"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 18:   //  AppStudio.Common.ObservableBase
                userType = new global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                xamlType = userType;
                break;

            case 19:   //  AppStudio.Common.Converters.PageHeaderTypeConverter
                userType = new global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_19_PageHeaderTypeConverter;
                xamlType = userType;
                break;

            case 20:   //  SecretImage.Controls.PageHeaderControl
                userType = new global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.UserControl"));
                userType.Activator = Activate_20_PageHeaderControl;
                userType.AddMemberName("HeaderText");
                userType.AddMemberName("LastUpdateDateTime");
                userType.AddMemberName("ShowBackButton");
                userType.AddMemberName("PageHeaderType");
                userType.AddMemberName("ShowSnappedMode");
                userType.AddMemberName("HasLocalData");
                userType.AddMemberName("IsNetworkAvailable");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 21:   //  Windows.UI.Xaml.Controls.UserControl
                xamlType = new global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 22:   //  Boolean
                xamlType = new global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 23:   //  SecretImage.Controls.PageHeaderType
                userType = new global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Logo", global::SecretImage.Controls.PageHeaderType.Logo);
                userType.AddEnumValue("LogoText", global::SecretImage.Controls.PageHeaderType.LogoText);
                userType.AddEnumValue("Text", global::SecretImage.Controls.PageHeaderType.Text);
                userType.AddEnumValue("None", global::SecretImage.Controls.PageHeaderType.None);
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 24:   //  System.Enum
                userType = new global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                xamlType = userType;
                break;

            case 25:   //  System.ValueType
                userType = new global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                xamlType = userType;
                break;

            case 26:   //  SecretImage.PageBase
                userType = new global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 27:   //  Windows.UI.Xaml.Controls.Page
                xamlType = new global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 28:   //  SecretImage.Controls.ImageViewer
                userType = new global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("SecretImage.PageBase"));
                userType.Activator = Activate_28_ImageViewer;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 29:   //  Microsoft.Xaml.Interactivity.Interaction
                userType = new global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.AddMemberName("Behaviors");
                xamlType = userType;
                break;

            case 30:   //  Microsoft.Xaml.Interactivity.BehaviorCollection
                userType = new global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObjectCollection"));
                userType.CollectionAdd = VectorAdd_30_BehaviorCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 31:   //  Windows.UI.Xaml.DependencyObjectCollection
                xamlType = new global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 32:   //  Microsoft.Xaml.Interactions.Core.DataTriggerBehavior
                userType = new global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObject"));
                userType.Activator = Activate_32_DataTriggerBehavior;
                userType.SetContentPropertyName("Microsoft.Xaml.Interactions.Core.DataTriggerBehavior.Actions");
                userType.AddMemberName("Actions");
                userType.AddMemberName("Binding");
                userType.AddMemberName("ComparisonCondition");
                userType.AddMemberName("Value");
                userType.AddMemberName("AssociatedObject");
                xamlType = userType;
                break;

            case 33:   //  Microsoft.Xaml.Interactivity.ActionCollection
                userType = new global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObjectCollection"));
                userType.CollectionAdd = VectorAdd_33_ActionCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 34:   //  Microsoft.Xaml.Interactions.Core.ComparisonConditionType
                userType = new global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Equal", global::Microsoft.Xaml.Interactions.Core.ComparisonConditionType.Equal);
                userType.AddEnumValue("NotEqual", global::Microsoft.Xaml.Interactions.Core.ComparisonConditionType.NotEqual);
                userType.AddEnumValue("LessThan", global::Microsoft.Xaml.Interactions.Core.ComparisonConditionType.LessThan);
                userType.AddEnumValue("LessThanOrEqual", global::Microsoft.Xaml.Interactions.Core.ComparisonConditionType.LessThanOrEqual);
                userType.AddEnumValue("GreaterThan", global::Microsoft.Xaml.Interactions.Core.ComparisonConditionType.GreaterThan);
                userType.AddEnumValue("GreaterThanOrEqual", global::Microsoft.Xaml.Interactions.Core.ComparisonConditionType.GreaterThanOrEqual);
                xamlType = userType;
                break;

            case 35:   //  Microsoft.Xaml.Interactions.Core.GoToStateAction
                userType = new global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObject"));
                userType.Activator = Activate_35_GoToStateAction;
                userType.AddMemberName("StateName");
                userType.AddMemberName("UseTransitions");
                userType.AddMemberName("TargetObject");
                xamlType = userType;
                break;

            case 36:   //  Windows.UI.Xaml.FrameworkElement
                xamlType = new global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 37:   //  SecretImage.Controls.YouTubeViewer
                userType = new global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.UserControl"));
                userType.Activator = Activate_37_YouTubeViewer;
                userType.AddMemberName("TitleText");
                userType.AddMemberName("PageTitle");
                userType.AddMemberName("SummaryText");
                userType.AddMemberName("ShowSnappedMode");
                userType.AddMemberName("EmbedUrl");
                userType.AddMemberName("NavigationHelper");
                userType.AddMemberName("NetworkAvailable");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 38:   //  AppStudio.Common.Commands.SectionHeaderClickCommand
                userType = new global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.AddMemberName("Command");
                xamlType = userType;
                break;

            case 39:   //  System.Windows.Input.ICommand
                userType = new global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 40:   //  AppStudio.Common.Actions.ActionsCommandBar
                userType = new global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.CommandBar"));
                userType.Activator = Activate_40_ActionsCommandBar;
                userType.AddMemberName("ActionsSource");
                userType.AddMemberName("HideOnLandscape");
                userType.AddMemberName("IsVisible");
                xamlType = userType;
                break;

            case 41:   //  Windows.UI.Xaml.Controls.CommandBar
                xamlType = new global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 42:   //  System.Collections.Generic.List`1<AppStudio.Common.Actions.ActionInfo>
                userType = new global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.CollectionAdd = VectorAdd_42_List;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 43:   //  AppStudio.Common.Actions.ActionInfo
                userType = new global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_43_ActionInfo;
                userType.AddMemberName("Name");
                userType.AddMemberName("Text");
                userType.AddMemberName("Style");
                userType.AddMemberName("Command");
                userType.AddMemberName("CommandParameter");
                userType.AddMemberName("ActionType");
                xamlType = userType;
                break;

            case 44:   //  AppStudio.Common.Actions.ActionType
                userType = new global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Primary", global::AppStudio.Common.Actions.ActionType.Primary);
                userType.AddEnumValue("Secondary", global::AppStudio.Common.Actions.ActionType.Secondary);
                xamlType = userType;
                break;

            case 45:   //  SecretImage.MainPage
                userType = new global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("SecretImage.PageBase"));
                userType.Activator = Activate_45_MainPage;
                userType.AddMemberName("ViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 46:   //  SecretImage.ViewModels.MainViewModel
                userType = new global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("AppStudio.Common.ObservableBase"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 47:   //  SecretImage.Controls.ErrorNotificationControl
                userType = new global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.UserControl"));
                userType.Activator = Activate_47_ErrorNotificationControl;
                userType.AddMemberName("IsVisible");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 48:   //  AppStudio.Common.Controls.RichTextColumns
                userType = new global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Panel"));
                userType.Activator = Activate_48_RichTextColumns;
                userType.SetContentPropertyName("AppStudio.Common.Controls.RichTextColumns.RichTextContent");
                userType.AddMemberName("RichTextContent");
                userType.AddMemberName("ColumnTemplate");
                xamlType = userType;
                break;

            case 49:   //  Windows.UI.Xaml.Controls.Panel
                xamlType = new global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 50:   //  Windows.UI.Xaml.Controls.RichTextBlock
                xamlType = new global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 51:   //  Windows.UI.Xaml.DataTemplate
                xamlType = new global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 52:   //  AppStudio.Common.Commands.ItemClickCommand
                userType = new global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.AddMemberName("Command");
                xamlType = userType;
                break;

            case 53:   //  Windows.UI.Color
                userType = new global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.AddMemberName("A");
                userType.AddMemberName("B");
                userType.AddMemberName("G");
                userType.AddMemberName("R");
                xamlType = userType;
                break;

            case 54:   //  Byte
                userType = new global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 55:   //  AppStudio.Common.Converters.RichTextBlockStyleConverter
                userType = new global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_55_RichTextBlockStyleConverter;
                userType.AddMemberName("LargeStyle");
                userType.AddMemberName("NormalStyle");
                userType.AddMemberName("SmallStyle");
                xamlType = userType;
                break;

            case 56:   //  Windows.UI.Xaml.Style
                xamlType = new global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;
            }
            return xamlType;
        }


        private object get_0_Properties_Html(object instance)
        {
            return global::AppStudio.Common.Controls.Html2Xaml.Properties.GetHtml((global::Windows.UI.Xaml.DependencyObject)instance);
        }
        private void set_0_Properties_Html(object instance, object Value)
        {
            global::AppStudio.Common.Controls.Html2Xaml.Properties.SetHtml((global::Windows.UI.Xaml.DependencyObject)instance, (global::System.String)Value);
        }
        private object get_1_PrivacyFlyout_PrivacyViewModel(object instance)
        {
            var that = (global::SecretImage.AppFlyouts.PrivacyFlyout)instance;
            return that.PrivacyViewModel;
        }
        private object get_2_PageHeaderControl_HeaderText(object instance)
        {
            var that = (global::SecretImage.Controls.PageHeaderControl)instance;
            return that.HeaderText;
        }
        private void set_2_PageHeaderControl_HeaderText(object instance, object Value)
        {
            var that = (global::SecretImage.Controls.PageHeaderControl)instance;
            that.HeaderText = (global::System.String)Value;
        }
        private object get_3_PageHeaderControl_LastUpdateDateTime(object instance)
        {
            var that = (global::SecretImage.Controls.PageHeaderControl)instance;
            return that.LastUpdateDateTime;
        }
        private void set_3_PageHeaderControl_LastUpdateDateTime(object instance, object Value)
        {
            var that = (global::SecretImage.Controls.PageHeaderControl)instance;
            that.LastUpdateDateTime = (global::System.String)Value;
        }
        private object get_4_PageHeaderControl_ShowBackButton(object instance)
        {
            var that = (global::SecretImage.Controls.PageHeaderControl)instance;
            return that.ShowBackButton;
        }
        private void set_4_PageHeaderControl_ShowBackButton(object instance, object Value)
        {
            var that = (global::SecretImage.Controls.PageHeaderControl)instance;
            that.ShowBackButton = (global::System.Boolean)Value;
        }
        private object get_5_PageHeaderControl_PageHeaderType(object instance)
        {
            var that = (global::SecretImage.Controls.PageHeaderControl)instance;
            return that.PageHeaderType;
        }
        private void set_5_PageHeaderControl_PageHeaderType(object instance, object Value)
        {
            var that = (global::SecretImage.Controls.PageHeaderControl)instance;
            that.PageHeaderType = (global::SecretImage.Controls.PageHeaderType)Value;
        }
        private object get_6_PageHeaderControl_ShowSnappedMode(object instance)
        {
            var that = (global::SecretImage.Controls.PageHeaderControl)instance;
            return that.ShowSnappedMode;
        }
        private void set_6_PageHeaderControl_ShowSnappedMode(object instance, object Value)
        {
            var that = (global::SecretImage.Controls.PageHeaderControl)instance;
            that.ShowSnappedMode = (global::System.Boolean)Value;
        }
        private object get_7_PageHeaderControl_HasLocalData(object instance)
        {
            var that = (global::SecretImage.Controls.PageHeaderControl)instance;
            return that.HasLocalData;
        }
        private void set_7_PageHeaderControl_HasLocalData(object instance, object Value)
        {
            var that = (global::SecretImage.Controls.PageHeaderControl)instance;
            that.HasLocalData = (global::System.Boolean)Value;
        }
        private object get_8_PageHeaderControl_IsNetworkAvailable(object instance)
        {
            var that = (global::SecretImage.Controls.PageHeaderControl)instance;
            return that.IsNetworkAvailable;
        }
        private object get_9_Interaction_Behaviors(object instance)
        {
            return global::Microsoft.Xaml.Interactivity.Interaction.GetBehaviors((global::Windows.UI.Xaml.DependencyObject)instance);
        }
        private void set_9_Interaction_Behaviors(object instance, object Value)
        {
            global::Microsoft.Xaml.Interactivity.Interaction.SetBehaviors((global::Windows.UI.Xaml.DependencyObject)instance, (global::Microsoft.Xaml.Interactivity.BehaviorCollection)Value);
        }
        private object get_10_DataTriggerBehavior_Actions(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.DataTriggerBehavior)instance;
            return that.Actions;
        }
        private object get_11_DataTriggerBehavior_Binding(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.DataTriggerBehavior)instance;
            return that.Binding;
        }
        private void set_11_DataTriggerBehavior_Binding(object instance, object Value)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.DataTriggerBehavior)instance;
            that.Binding = (global::System.Object)Value;
        }
        private object get_12_DataTriggerBehavior_ComparisonCondition(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.DataTriggerBehavior)instance;
            return that.ComparisonCondition;
        }
        private void set_12_DataTriggerBehavior_ComparisonCondition(object instance, object Value)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.DataTriggerBehavior)instance;
            that.ComparisonCondition = (global::Microsoft.Xaml.Interactions.Core.ComparisonConditionType)Value;
        }
        private object get_13_DataTriggerBehavior_Value(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.DataTriggerBehavior)instance;
            return that.Value;
        }
        private void set_13_DataTriggerBehavior_Value(object instance, object Value)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.DataTriggerBehavior)instance;
            that.Value = (global::System.Object)Value;
        }
        private object get_14_DataTriggerBehavior_AssociatedObject(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.DataTriggerBehavior)instance;
            return that.AssociatedObject;
        }
        private object get_15_GoToStateAction_StateName(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.GoToStateAction)instance;
            return that.StateName;
        }
        private void set_15_GoToStateAction_StateName(object instance, object Value)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.GoToStateAction)instance;
            that.StateName = (global::System.String)Value;
        }
        private object get_16_GoToStateAction_UseTransitions(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.GoToStateAction)instance;
            return that.UseTransitions;
        }
        private void set_16_GoToStateAction_UseTransitions(object instance, object Value)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.GoToStateAction)instance;
            that.UseTransitions = (global::System.Boolean)Value;
        }
        private object get_17_GoToStateAction_TargetObject(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.GoToStateAction)instance;
            return that.TargetObject;
        }
        private void set_17_GoToStateAction_TargetObject(object instance, object Value)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.GoToStateAction)instance;
            that.TargetObject = (global::Windows.UI.Xaml.FrameworkElement)Value;
        }
        private object get_18_YouTubeViewer_TitleText(object instance)
        {
            var that = (global::SecretImage.Controls.YouTubeViewer)instance;
            return that.TitleText;
        }
        private void set_18_YouTubeViewer_TitleText(object instance, object Value)
        {
            var that = (global::SecretImage.Controls.YouTubeViewer)instance;
            that.TitleText = (global::System.String)Value;
        }
        private object get_19_YouTubeViewer_PageTitle(object instance)
        {
            var that = (global::SecretImage.Controls.YouTubeViewer)instance;
            return that.PageTitle;
        }
        private void set_19_YouTubeViewer_PageTitle(object instance, object Value)
        {
            var that = (global::SecretImage.Controls.YouTubeViewer)instance;
            that.PageTitle = (global::System.String)Value;
        }
        private object get_20_YouTubeViewer_SummaryText(object instance)
        {
            var that = (global::SecretImage.Controls.YouTubeViewer)instance;
            return that.SummaryText;
        }
        private void set_20_YouTubeViewer_SummaryText(object instance, object Value)
        {
            var that = (global::SecretImage.Controls.YouTubeViewer)instance;
            that.SummaryText = (global::System.String)Value;
        }
        private object get_21_YouTubeViewer_ShowSnappedMode(object instance)
        {
            var that = (global::SecretImage.Controls.YouTubeViewer)instance;
            return that.ShowSnappedMode;
        }
        private void set_21_YouTubeViewer_ShowSnappedMode(object instance, object Value)
        {
            var that = (global::SecretImage.Controls.YouTubeViewer)instance;
            that.ShowSnappedMode = (global::System.Boolean)Value;
        }
        private object get_22_YouTubeViewer_EmbedUrl(object instance)
        {
            var that = (global::SecretImage.Controls.YouTubeViewer)instance;
            return that.EmbedUrl;
        }
        private void set_22_YouTubeViewer_EmbedUrl(object instance, object Value)
        {
            var that = (global::SecretImage.Controls.YouTubeViewer)instance;
            that.EmbedUrl = (global::System.String)Value;
        }
        private object get_23_YouTubeViewer_NavigationHelper(object instance)
        {
            var that = (global::SecretImage.Controls.YouTubeViewer)instance;
            return that.NavigationHelper;
        }
        private void set_23_YouTubeViewer_NavigationHelper(object instance, object Value)
        {
            var that = (global::SecretImage.Controls.YouTubeViewer)instance;
            that.NavigationHelper = (global::AppStudio.Common.Navigation.NavigationService)Value;
        }
        private object get_24_YouTubeViewer_NetworkAvailable(object instance)
        {
            var that = (global::SecretImage.Controls.YouTubeViewer)instance;
            return that.NetworkAvailable;
        }
        private object get_25_SectionHeaderClickCommand_Command(object instance)
        {
            return global::AppStudio.Common.Commands.SectionHeaderClickCommand.GetCommand((global::Windows.UI.Xaml.DependencyObject)instance);
        }
        private void set_25_SectionHeaderClickCommand_Command(object instance, object Value)
        {
            global::AppStudio.Common.Commands.SectionHeaderClickCommand.SetCommand((global::Windows.UI.Xaml.DependencyObject)instance, (global::System.Windows.Input.ICommand)Value);
        }
        private object get_26_ActionsCommandBar_ActionsSource(object instance)
        {
            var that = (global::AppStudio.Common.Actions.ActionsCommandBar)instance;
            return that.ActionsSource;
        }
        private void set_26_ActionsCommandBar_ActionsSource(object instance, object Value)
        {
            var that = (global::AppStudio.Common.Actions.ActionsCommandBar)instance;
            that.ActionsSource = (global::System.Collections.Generic.List<global::AppStudio.Common.Actions.ActionInfo>)Value;
        }
        private object get_27_ActionInfo_Name(object instance)
        {
            var that = (global::AppStudio.Common.Actions.ActionInfo)instance;
            return that.Name;
        }
        private void set_27_ActionInfo_Name(object instance, object Value)
        {
            var that = (global::AppStudio.Common.Actions.ActionInfo)instance;
            that.Name = (global::System.String)Value;
        }
        private object get_28_ActionInfo_Text(object instance)
        {
            var that = (global::AppStudio.Common.Actions.ActionInfo)instance;
            return that.Text;
        }
        private void set_28_ActionInfo_Text(object instance, object Value)
        {
            var that = (global::AppStudio.Common.Actions.ActionInfo)instance;
            that.Text = (global::System.String)Value;
        }
        private object get_29_ActionInfo_Style(object instance)
        {
            var that = (global::AppStudio.Common.Actions.ActionInfo)instance;
            return that.Style;
        }
        private void set_29_ActionInfo_Style(object instance, object Value)
        {
            var that = (global::AppStudio.Common.Actions.ActionInfo)instance;
            that.Style = (global::System.String)Value;
        }
        private object get_30_ActionInfo_Command(object instance)
        {
            var that = (global::AppStudio.Common.Actions.ActionInfo)instance;
            return that.Command;
        }
        private void set_30_ActionInfo_Command(object instance, object Value)
        {
            var that = (global::AppStudio.Common.Actions.ActionInfo)instance;
            that.Command = (global::System.Windows.Input.ICommand)Value;
        }
        private object get_31_ActionInfo_CommandParameter(object instance)
        {
            var that = (global::AppStudio.Common.Actions.ActionInfo)instance;
            return that.CommandParameter;
        }
        private void set_31_ActionInfo_CommandParameter(object instance, object Value)
        {
            var that = (global::AppStudio.Common.Actions.ActionInfo)instance;
            that.CommandParameter = (global::System.Object)Value;
        }
        private object get_32_ActionInfo_ActionType(object instance)
        {
            var that = (global::AppStudio.Common.Actions.ActionInfo)instance;
            return that.ActionType;
        }
        private void set_32_ActionInfo_ActionType(object instance, object Value)
        {
            var that = (global::AppStudio.Common.Actions.ActionInfo)instance;
            that.ActionType = (global::AppStudio.Common.Actions.ActionType)Value;
        }
        private object get_33_ActionsCommandBar_HideOnLandscape(object instance)
        {
            var that = (global::AppStudio.Common.Actions.ActionsCommandBar)instance;
            return that.HideOnLandscape;
        }
        private void set_33_ActionsCommandBar_HideOnLandscape(object instance, object Value)
        {
            var that = (global::AppStudio.Common.Actions.ActionsCommandBar)instance;
            that.HideOnLandscape = (global::System.Boolean)Value;
        }
        private object get_34_ActionsCommandBar_IsVisible(object instance)
        {
            var that = (global::AppStudio.Common.Actions.ActionsCommandBar)instance;
            return that.IsVisible;
        }
        private void set_34_ActionsCommandBar_IsVisible(object instance, object Value)
        {
            var that = (global::AppStudio.Common.Actions.ActionsCommandBar)instance;
            that.IsVisible = (global::System.Boolean)Value;
        }
        private object get_35_MainPage_ViewModel(object instance)
        {
            var that = (global::SecretImage.MainPage)instance;
            return that.ViewModel;
        }
        private void set_35_MainPage_ViewModel(object instance, object Value)
        {
            var that = (global::SecretImage.MainPage)instance;
            that.ViewModel = (global::SecretImage.ViewModels.MainViewModel)Value;
        }
        private object get_36_ErrorNotificationControl_IsVisible(object instance)
        {
            var that = (global::SecretImage.Controls.ErrorNotificationControl)instance;
            return that.IsVisible;
        }
        private void set_36_ErrorNotificationControl_IsVisible(object instance, object Value)
        {
            var that = (global::SecretImage.Controls.ErrorNotificationControl)instance;
            that.IsVisible = (global::System.Boolean)Value;
        }
        private object get_37_RichTextColumns_RichTextContent(object instance)
        {
            var that = (global::AppStudio.Common.Controls.RichTextColumns)instance;
            return that.RichTextContent;
        }
        private void set_37_RichTextColumns_RichTextContent(object instance, object Value)
        {
            var that = (global::AppStudio.Common.Controls.RichTextColumns)instance;
            that.RichTextContent = (global::Windows.UI.Xaml.Controls.RichTextBlock)Value;
        }
        private object get_38_RichTextColumns_ColumnTemplate(object instance)
        {
            var that = (global::AppStudio.Common.Controls.RichTextColumns)instance;
            return that.ColumnTemplate;
        }
        private void set_38_RichTextColumns_ColumnTemplate(object instance, object Value)
        {
            var that = (global::AppStudio.Common.Controls.RichTextColumns)instance;
            that.ColumnTemplate = (global::Windows.UI.Xaml.DataTemplate)Value;
        }
        private object get_39_ItemClickCommand_Command(object instance)
        {
            return global::AppStudio.Common.Commands.ItemClickCommand.GetCommand((global::Windows.UI.Xaml.DependencyObject)instance);
        }
        private void set_39_ItemClickCommand_Command(object instance, object Value)
        {
            global::AppStudio.Common.Commands.ItemClickCommand.SetCommand((global::Windows.UI.Xaml.DependencyObject)instance, (global::System.Windows.Input.ICommand)Value);
        }
        private object get_40_Color_A(object instance)
        {
            var that = (global::Windows.UI.Color)instance;
            return that.A;
        }
        private void set_40_Color_A(object instance, object Value)
        {
            var that = (global::Windows.UI.Color)instance;
            that.A = (global::System.Byte)Value;
        }
        private object get_41_Color_B(object instance)
        {
            var that = (global::Windows.UI.Color)instance;
            return that.B;
        }
        private void set_41_Color_B(object instance, object Value)
        {
            var that = (global::Windows.UI.Color)instance;
            that.B = (global::System.Byte)Value;
        }
        private object get_42_Color_G(object instance)
        {
            var that = (global::Windows.UI.Color)instance;
            return that.G;
        }
        private void set_42_Color_G(object instance, object Value)
        {
            var that = (global::Windows.UI.Color)instance;
            that.G = (global::System.Byte)Value;
        }
        private object get_43_Color_R(object instance)
        {
            var that = (global::Windows.UI.Color)instance;
            return that.R;
        }
        private void set_43_Color_R(object instance, object Value)
        {
            var that = (global::Windows.UI.Color)instance;
            that.R = (global::System.Byte)Value;
        }
        private object get_44_RichTextBlockStyleConverter_LargeStyle(object instance)
        {
            var that = (global::AppStudio.Common.Converters.RichTextBlockStyleConverter)instance;
            return that.LargeStyle;
        }
        private void set_44_RichTextBlockStyleConverter_LargeStyle(object instance, object Value)
        {
            var that = (global::AppStudio.Common.Converters.RichTextBlockStyleConverter)instance;
            that.LargeStyle = (global::Windows.UI.Xaml.Style)Value;
        }
        private object get_45_RichTextBlockStyleConverter_NormalStyle(object instance)
        {
            var that = (global::AppStudio.Common.Converters.RichTextBlockStyleConverter)instance;
            return that.NormalStyle;
        }
        private void set_45_RichTextBlockStyleConverter_NormalStyle(object instance, object Value)
        {
            var that = (global::AppStudio.Common.Converters.RichTextBlockStyleConverter)instance;
            that.NormalStyle = (global::Windows.UI.Xaml.Style)Value;
        }
        private object get_46_RichTextBlockStyleConverter_SmallStyle(object instance)
        {
            var that = (global::AppStudio.Common.Converters.RichTextBlockStyleConverter)instance;
            return that.SmallStyle;
        }
        private void set_46_RichTextBlockStyleConverter_SmallStyle(object instance, object Value)
        {
            var that = (global::AppStudio.Common.Converters.RichTextBlockStyleConverter)instance;
            that.SmallStyle = (global::Windows.UI.Xaml.Style)Value;
        }

        private global::Windows.UI.Xaml.Markup.IXamlMember CreateXamlMember(string longMemberName)
        {
            global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlMember xamlMember = null;
            global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlUserType userType;

            switch (longMemberName)
            {
            case "AppStudio.Common.Controls.Html2Xaml.Properties.Html":
                userType = (global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("AppStudio.Common.Controls.Html2Xaml.Properties");
                xamlMember = new global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlMember(this, "Html", "String");
                xamlMember.SetTargetTypeName("Windows.UI.Xaml.DependencyObject");
                xamlMember.SetIsDependencyProperty();
                xamlMember.SetIsAttachable();
                xamlMember.Getter = get_0_Properties_Html;
                xamlMember.Setter = set_0_Properties_Html;
                break;
            case "SecretImage.AppFlyouts.PrivacyFlyout.PrivacyViewModel":
                userType = (global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SecretImage.AppFlyouts.PrivacyFlyout");
                xamlMember = new global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlMember(this, "PrivacyViewModel", "SecretImage.ViewModels.PrivacyViewModel");
                xamlMember.Getter = get_1_PrivacyFlyout_PrivacyViewModel;
                xamlMember.SetIsReadOnly();
                break;
            case "SecretImage.Controls.PageHeaderControl.HeaderText":
                userType = (global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SecretImage.Controls.PageHeaderControl");
                xamlMember = new global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlMember(this, "HeaderText", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_2_PageHeaderControl_HeaderText;
                xamlMember.Setter = set_2_PageHeaderControl_HeaderText;
                break;
            case "SecretImage.Controls.PageHeaderControl.LastUpdateDateTime":
                userType = (global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SecretImage.Controls.PageHeaderControl");
                xamlMember = new global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlMember(this, "LastUpdateDateTime", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_3_PageHeaderControl_LastUpdateDateTime;
                xamlMember.Setter = set_3_PageHeaderControl_LastUpdateDateTime;
                break;
            case "SecretImage.Controls.PageHeaderControl.ShowBackButton":
                userType = (global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SecretImage.Controls.PageHeaderControl");
                xamlMember = new global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlMember(this, "ShowBackButton", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_4_PageHeaderControl_ShowBackButton;
                xamlMember.Setter = set_4_PageHeaderControl_ShowBackButton;
                break;
            case "SecretImage.Controls.PageHeaderControl.PageHeaderType":
                userType = (global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SecretImage.Controls.PageHeaderControl");
                xamlMember = new global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlMember(this, "PageHeaderType", "SecretImage.Controls.PageHeaderType");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_5_PageHeaderControl_PageHeaderType;
                xamlMember.Setter = set_5_PageHeaderControl_PageHeaderType;
                break;
            case "SecretImage.Controls.PageHeaderControl.ShowSnappedMode":
                userType = (global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SecretImage.Controls.PageHeaderControl");
                xamlMember = new global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlMember(this, "ShowSnappedMode", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_6_PageHeaderControl_ShowSnappedMode;
                xamlMember.Setter = set_6_PageHeaderControl_ShowSnappedMode;
                break;
            case "SecretImage.Controls.PageHeaderControl.HasLocalData":
                userType = (global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SecretImage.Controls.PageHeaderControl");
                xamlMember = new global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlMember(this, "HasLocalData", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_7_PageHeaderControl_HasLocalData;
                xamlMember.Setter = set_7_PageHeaderControl_HasLocalData;
                break;
            case "SecretImage.Controls.PageHeaderControl.IsNetworkAvailable":
                userType = (global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SecretImage.Controls.PageHeaderControl");
                xamlMember = new global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlMember(this, "IsNetworkAvailable", "Boolean");
                xamlMember.Getter = get_8_PageHeaderControl_IsNetworkAvailable;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.Xaml.Interactivity.Interaction.Behaviors":
                userType = (global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactivity.Interaction");
                xamlMember = new global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlMember(this, "Behaviors", "Microsoft.Xaml.Interactivity.BehaviorCollection");
                xamlMember.SetTargetTypeName("Windows.UI.Xaml.DependencyObject");
                xamlMember.SetIsAttachable();
                xamlMember.Getter = get_9_Interaction_Behaviors;
                xamlMember.Setter = set_9_Interaction_Behaviors;
                break;
            case "Microsoft.Xaml.Interactions.Core.DataTriggerBehavior.Actions":
                userType = (global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactions.Core.DataTriggerBehavior");
                xamlMember = new global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlMember(this, "Actions", "Microsoft.Xaml.Interactivity.ActionCollection");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_10_DataTriggerBehavior_Actions;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.Xaml.Interactions.Core.DataTriggerBehavior.Binding":
                userType = (global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactions.Core.DataTriggerBehavior");
                xamlMember = new global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlMember(this, "Binding", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_11_DataTriggerBehavior_Binding;
                xamlMember.Setter = set_11_DataTriggerBehavior_Binding;
                break;
            case "Microsoft.Xaml.Interactions.Core.DataTriggerBehavior.ComparisonCondition":
                userType = (global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactions.Core.DataTriggerBehavior");
                xamlMember = new global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlMember(this, "ComparisonCondition", "Microsoft.Xaml.Interactions.Core.ComparisonConditionType");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_12_DataTriggerBehavior_ComparisonCondition;
                xamlMember.Setter = set_12_DataTriggerBehavior_ComparisonCondition;
                break;
            case "Microsoft.Xaml.Interactions.Core.DataTriggerBehavior.Value":
                userType = (global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactions.Core.DataTriggerBehavior");
                xamlMember = new global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlMember(this, "Value", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_13_DataTriggerBehavior_Value;
                xamlMember.Setter = set_13_DataTriggerBehavior_Value;
                break;
            case "Microsoft.Xaml.Interactions.Core.DataTriggerBehavior.AssociatedObject":
                userType = (global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactions.Core.DataTriggerBehavior");
                xamlMember = new global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlMember(this, "AssociatedObject", "Windows.UI.Xaml.DependencyObject");
                xamlMember.Getter = get_14_DataTriggerBehavior_AssociatedObject;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.Xaml.Interactions.Core.GoToStateAction.StateName":
                userType = (global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactions.Core.GoToStateAction");
                xamlMember = new global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlMember(this, "StateName", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_15_GoToStateAction_StateName;
                xamlMember.Setter = set_15_GoToStateAction_StateName;
                break;
            case "Microsoft.Xaml.Interactions.Core.GoToStateAction.UseTransitions":
                userType = (global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactions.Core.GoToStateAction");
                xamlMember = new global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlMember(this, "UseTransitions", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_16_GoToStateAction_UseTransitions;
                xamlMember.Setter = set_16_GoToStateAction_UseTransitions;
                break;
            case "Microsoft.Xaml.Interactions.Core.GoToStateAction.TargetObject":
                userType = (global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactions.Core.GoToStateAction");
                xamlMember = new global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlMember(this, "TargetObject", "Windows.UI.Xaml.FrameworkElement");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_17_GoToStateAction_TargetObject;
                xamlMember.Setter = set_17_GoToStateAction_TargetObject;
                break;
            case "SecretImage.Controls.YouTubeViewer.TitleText":
                userType = (global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SecretImage.Controls.YouTubeViewer");
                xamlMember = new global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlMember(this, "TitleText", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_18_YouTubeViewer_TitleText;
                xamlMember.Setter = set_18_YouTubeViewer_TitleText;
                break;
            case "SecretImage.Controls.YouTubeViewer.PageTitle":
                userType = (global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SecretImage.Controls.YouTubeViewer");
                xamlMember = new global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlMember(this, "PageTitle", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_19_YouTubeViewer_PageTitle;
                xamlMember.Setter = set_19_YouTubeViewer_PageTitle;
                break;
            case "SecretImage.Controls.YouTubeViewer.SummaryText":
                userType = (global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SecretImage.Controls.YouTubeViewer");
                xamlMember = new global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlMember(this, "SummaryText", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_20_YouTubeViewer_SummaryText;
                xamlMember.Setter = set_20_YouTubeViewer_SummaryText;
                break;
            case "SecretImage.Controls.YouTubeViewer.ShowSnappedMode":
                userType = (global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SecretImage.Controls.YouTubeViewer");
                xamlMember = new global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlMember(this, "ShowSnappedMode", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_21_YouTubeViewer_ShowSnappedMode;
                xamlMember.Setter = set_21_YouTubeViewer_ShowSnappedMode;
                break;
            case "SecretImage.Controls.YouTubeViewer.EmbedUrl":
                userType = (global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SecretImage.Controls.YouTubeViewer");
                xamlMember = new global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlMember(this, "EmbedUrl", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_22_YouTubeViewer_EmbedUrl;
                xamlMember.Setter = set_22_YouTubeViewer_EmbedUrl;
                break;
            case "SecretImage.Controls.YouTubeViewer.NavigationHelper":
                userType = (global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SecretImage.Controls.YouTubeViewer");
                xamlMember = new global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlMember(this, "NavigationHelper", "AppStudio.Common.Navigation.NavigationService");
                xamlMember.Getter = get_23_YouTubeViewer_NavigationHelper;
                xamlMember.Setter = set_23_YouTubeViewer_NavigationHelper;
                break;
            case "SecretImage.Controls.YouTubeViewer.NetworkAvailable":
                userType = (global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SecretImage.Controls.YouTubeViewer");
                xamlMember = new global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlMember(this, "NetworkAvailable", "Boolean");
                xamlMember.Getter = get_24_YouTubeViewer_NetworkAvailable;
                xamlMember.SetIsReadOnly();
                break;
            case "AppStudio.Common.Commands.SectionHeaderClickCommand.Command":
                userType = (global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("AppStudio.Common.Commands.SectionHeaderClickCommand");
                xamlMember = new global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlMember(this, "Command", "System.Windows.Input.ICommand");
                xamlMember.SetTargetTypeName("Windows.UI.Xaml.DependencyObject");
                xamlMember.SetIsAttachable();
                xamlMember.Getter = get_25_SectionHeaderClickCommand_Command;
                xamlMember.Setter = set_25_SectionHeaderClickCommand_Command;
                break;
            case "AppStudio.Common.Actions.ActionsCommandBar.ActionsSource":
                userType = (global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("AppStudio.Common.Actions.ActionsCommandBar");
                xamlMember = new global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlMember(this, "ActionsSource", "System.Collections.Generic.List`1<AppStudio.Common.Actions.ActionInfo>");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_26_ActionsCommandBar_ActionsSource;
                xamlMember.Setter = set_26_ActionsCommandBar_ActionsSource;
                break;
            case "AppStudio.Common.Actions.ActionInfo.Name":
                userType = (global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("AppStudio.Common.Actions.ActionInfo");
                xamlMember = new global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlMember(this, "Name", "String");
                xamlMember.Getter = get_27_ActionInfo_Name;
                xamlMember.Setter = set_27_ActionInfo_Name;
                break;
            case "AppStudio.Common.Actions.ActionInfo.Text":
                userType = (global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("AppStudio.Common.Actions.ActionInfo");
                xamlMember = new global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlMember(this, "Text", "String");
                xamlMember.Getter = get_28_ActionInfo_Text;
                xamlMember.Setter = set_28_ActionInfo_Text;
                break;
            case "AppStudio.Common.Actions.ActionInfo.Style":
                userType = (global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("AppStudio.Common.Actions.ActionInfo");
                xamlMember = new global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlMember(this, "Style", "String");
                xamlMember.Getter = get_29_ActionInfo_Style;
                xamlMember.Setter = set_29_ActionInfo_Style;
                break;
            case "AppStudio.Common.Actions.ActionInfo.Command":
                userType = (global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("AppStudio.Common.Actions.ActionInfo");
                xamlMember = new global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlMember(this, "Command", "System.Windows.Input.ICommand");
                xamlMember.Getter = get_30_ActionInfo_Command;
                xamlMember.Setter = set_30_ActionInfo_Command;
                break;
            case "AppStudio.Common.Actions.ActionInfo.CommandParameter":
                userType = (global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("AppStudio.Common.Actions.ActionInfo");
                xamlMember = new global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlMember(this, "CommandParameter", "Object");
                xamlMember.Getter = get_31_ActionInfo_CommandParameter;
                xamlMember.Setter = set_31_ActionInfo_CommandParameter;
                break;
            case "AppStudio.Common.Actions.ActionInfo.ActionType":
                userType = (global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("AppStudio.Common.Actions.ActionInfo");
                xamlMember = new global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlMember(this, "ActionType", "AppStudio.Common.Actions.ActionType");
                xamlMember.Getter = get_32_ActionInfo_ActionType;
                xamlMember.Setter = set_32_ActionInfo_ActionType;
                break;
            case "AppStudio.Common.Actions.ActionsCommandBar.HideOnLandscape":
                userType = (global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("AppStudio.Common.Actions.ActionsCommandBar");
                xamlMember = new global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlMember(this, "HideOnLandscape", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_33_ActionsCommandBar_HideOnLandscape;
                xamlMember.Setter = set_33_ActionsCommandBar_HideOnLandscape;
                break;
            case "AppStudio.Common.Actions.ActionsCommandBar.IsVisible":
                userType = (global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("AppStudio.Common.Actions.ActionsCommandBar");
                xamlMember = new global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlMember(this, "IsVisible", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_34_ActionsCommandBar_IsVisible;
                xamlMember.Setter = set_34_ActionsCommandBar_IsVisible;
                break;
            case "SecretImage.MainPage.ViewModel":
                userType = (global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SecretImage.MainPage");
                xamlMember = new global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlMember(this, "ViewModel", "SecretImage.ViewModels.MainViewModel");
                xamlMember.Getter = get_35_MainPage_ViewModel;
                xamlMember.Setter = set_35_MainPage_ViewModel;
                break;
            case "SecretImage.Controls.ErrorNotificationControl.IsVisible":
                userType = (global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("SecretImage.Controls.ErrorNotificationControl");
                xamlMember = new global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlMember(this, "IsVisible", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_36_ErrorNotificationControl_IsVisible;
                xamlMember.Setter = set_36_ErrorNotificationControl_IsVisible;
                break;
            case "AppStudio.Common.Controls.RichTextColumns.RichTextContent":
                userType = (global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("AppStudio.Common.Controls.RichTextColumns");
                xamlMember = new global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlMember(this, "RichTextContent", "Windows.UI.Xaml.Controls.RichTextBlock");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_37_RichTextColumns_RichTextContent;
                xamlMember.Setter = set_37_RichTextColumns_RichTextContent;
                break;
            case "AppStudio.Common.Controls.RichTextColumns.ColumnTemplate":
                userType = (global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("AppStudio.Common.Controls.RichTextColumns");
                xamlMember = new global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlMember(this, "ColumnTemplate", "Windows.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_38_RichTextColumns_ColumnTemplate;
                xamlMember.Setter = set_38_RichTextColumns_ColumnTemplate;
                break;
            case "AppStudio.Common.Commands.ItemClickCommand.Command":
                userType = (global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("AppStudio.Common.Commands.ItemClickCommand");
                xamlMember = new global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlMember(this, "Command", "System.Windows.Input.ICommand");
                xamlMember.SetTargetTypeName("Windows.UI.Xaml.DependencyObject");
                xamlMember.SetIsAttachable();
                xamlMember.Getter = get_39_ItemClickCommand_Command;
                xamlMember.Setter = set_39_ItemClickCommand_Command;
                break;
            case "Windows.UI.Color.A":
                userType = (global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Windows.UI.Color");
                xamlMember = new global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlMember(this, "A", "Byte");
                xamlMember.Getter = get_40_Color_A;
                xamlMember.Setter = set_40_Color_A;
                break;
            case "Windows.UI.Color.B":
                userType = (global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Windows.UI.Color");
                xamlMember = new global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlMember(this, "B", "Byte");
                xamlMember.Getter = get_41_Color_B;
                xamlMember.Setter = set_41_Color_B;
                break;
            case "Windows.UI.Color.G":
                userType = (global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Windows.UI.Color");
                xamlMember = new global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlMember(this, "G", "Byte");
                xamlMember.Getter = get_42_Color_G;
                xamlMember.Setter = set_42_Color_G;
                break;
            case "Windows.UI.Color.R":
                userType = (global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Windows.UI.Color");
                xamlMember = new global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlMember(this, "R", "Byte");
                xamlMember.Getter = get_43_Color_R;
                xamlMember.Setter = set_43_Color_R;
                break;
            case "AppStudio.Common.Converters.RichTextBlockStyleConverter.LargeStyle":
                userType = (global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("AppStudio.Common.Converters.RichTextBlockStyleConverter");
                xamlMember = new global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlMember(this, "LargeStyle", "Windows.UI.Xaml.Style");
                xamlMember.Getter = get_44_RichTextBlockStyleConverter_LargeStyle;
                xamlMember.Setter = set_44_RichTextBlockStyleConverter_LargeStyle;
                break;
            case "AppStudio.Common.Converters.RichTextBlockStyleConverter.NormalStyle":
                userType = (global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("AppStudio.Common.Converters.RichTextBlockStyleConverter");
                xamlMember = new global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlMember(this, "NormalStyle", "Windows.UI.Xaml.Style");
                xamlMember.Getter = get_45_RichTextBlockStyleConverter_NormalStyle;
                xamlMember.Setter = set_45_RichTextBlockStyleConverter_NormalStyle;
                break;
            case "AppStudio.Common.Converters.RichTextBlockStyleConverter.SmallStyle":
                userType = (global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlUserType)GetXamlTypeByName("AppStudio.Common.Converters.RichTextBlockStyleConverter");
                xamlMember = new global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlMember(this, "SmallStyle", "Windows.UI.Xaml.Style");
                xamlMember.Getter = get_46_RichTextBlockStyleConverter_SmallStyle;
                xamlMember.Setter = set_46_RichTextBlockStyleConverter_SmallStyle;
                break;
            }
            return xamlMember;
        }
    }

    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks", "4.0.0.0")]    
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlSystemBaseType : global::Windows.UI.Xaml.Markup.IXamlType
    {
        string _fullName;
        global::System.Type _underlyingType;

        public XamlSystemBaseType(string fullName, global::System.Type underlyingType)
        {
            _fullName = fullName;
            _underlyingType = underlyingType;
        }

        public string FullName { get { return _fullName; } }

        public global::System.Type UnderlyingType
        {
            get
            {
                return _underlyingType;
            }
        }

        virtual public global::Windows.UI.Xaml.Markup.IXamlType BaseType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlMember ContentProperty { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlMember GetMember(string name) { throw new global::System.NotImplementedException(); }
        virtual public bool IsArray { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsCollection { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsConstructible { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsDictionary { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsMarkupExtension { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsBindable { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsReturnTypeStub { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsLocalType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlType ItemType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlType KeyType { get { throw new global::System.NotImplementedException(); } }
        virtual public object ActivateInstance() { throw new global::System.NotImplementedException(); }
        virtual public void AddToMap(object instance, object key, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void AddToVector(object instance, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void RunInitializer()   { throw new global::System.NotImplementedException(); }
        virtual public object CreateFromString(string input)   { throw new global::System.NotImplementedException(); }
    }
    
    internal delegate object Activator();
    internal delegate void AddToCollection(object instance, object item);
    internal delegate void AddToDictionary(object instance, object key, object item);

    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks", "4.0.0.0")]    
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlUserType : global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlSystemBaseType
    {
        global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlTypeInfoProvider _provider;
        global::Windows.UI.Xaml.Markup.IXamlType _baseType;
        bool _isArray;
        bool _isMarkupExtension;
        bool _isBindable;
        bool _isReturnTypeStub;
        bool _isLocalType;

        string _contentPropertyName;
        string _itemTypeName;
        string _keyTypeName;
        global::System.Collections.Generic.Dictionary<string, string> _memberNames;
        global::System.Collections.Generic.Dictionary<string, object> _enumValues;

        public XamlUserType(global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlTypeInfoProvider provider, string fullName, global::System.Type fullType, global::Windows.UI.Xaml.Markup.IXamlType baseType)
            :base(fullName, fullType)
        {
            _provider = provider;
            _baseType = baseType;
        }

        // --- Interface methods ----

        override public global::Windows.UI.Xaml.Markup.IXamlType BaseType { get { return _baseType; } }
        override public bool IsArray { get { return _isArray; } }
        override public bool IsCollection { get { return (CollectionAdd != null); } }
        override public bool IsConstructible { get { return (Activator != null); } }
        override public bool IsDictionary { get { return (DictionaryAdd != null); } }
        override public bool IsMarkupExtension { get { return _isMarkupExtension; } }
        override public bool IsBindable { get { return _isBindable; } }
        override public bool IsReturnTypeStub { get { return _isReturnTypeStub; } }
        override public bool IsLocalType { get { return _isLocalType; } }

        override public global::Windows.UI.Xaml.Markup.IXamlMember ContentProperty
        {
            get { return _provider.GetMemberByLongName(_contentPropertyName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlType ItemType
        {
            get { return _provider.GetXamlTypeByName(_itemTypeName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlType KeyType
        {
            get { return _provider.GetXamlTypeByName(_keyTypeName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlMember GetMember(string name)
        {
            if (_memberNames == null)
            {
                return null;
            }
            string longName;
            if (_memberNames.TryGetValue(name, out longName))
            {
                return _provider.GetMemberByLongName(longName);
            }
            return null;
        }

        override public object ActivateInstance()
        {
            return Activator(); 
        }

        override public void AddToMap(object instance, object key, object item) 
        {
            DictionaryAdd(instance, key, item);
        }

        override public void AddToVector(object instance, object item)
        {
            CollectionAdd(instance, item);
        }

        override public void RunInitializer() 
        {
            System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(UnderlyingType.TypeHandle);
        }

        override public object CreateFromString(string input)
        {
            if (_enumValues != null)
            {
                int value = 0;

                string[] valueParts = input.Split(',');

                foreach (string valuePart in valueParts) 
                {
                    object partValue;
                    int enumFieldValue = 0;
                    try
                    {
                        if (_enumValues.TryGetValue(valuePart.Trim(), out partValue))
                        {
                            enumFieldValue = global::System.Convert.ToInt32(partValue);
                        }
                        else
                        {
                            try
                            {
                                enumFieldValue = global::System.Convert.ToInt32(valuePart.Trim());
                            }
                            catch( global::System.FormatException )
                            {
                                foreach( string key in _enumValues.Keys )
                                {
                                    if( string.Compare(valuePart.Trim(), key, global::System.StringComparison.OrdinalIgnoreCase) == 0 )
                                    {
                                        if( _enumValues.TryGetValue(key.Trim(), out partValue) )
                                        {
                                            enumFieldValue = global::System.Convert.ToInt32(partValue);
                                            break;
                                        }
                                    }
                                }
                            }
                        }
                        value |= enumFieldValue; 
                    }
                    catch( global::System.FormatException )
                    {
                        throw new global::System.ArgumentException(input, FullName);
                    }
                }

                return value; 
            }
            throw new global::System.ArgumentException(input, FullName);
        }

        // --- End of Interface methods

        public Activator Activator { get; set; }
        public AddToCollection CollectionAdd { get; set; }
        public AddToDictionary DictionaryAdd { get; set; }

        public void SetContentPropertyName(string contentPropertyName)
        {
            _contentPropertyName = contentPropertyName;
        }

        public void SetIsArray()
        {
            _isArray = true; 
        }

        public void SetIsMarkupExtension()
        {
            _isMarkupExtension = true;
        }

        public void SetIsBindable()
        {
            _isBindable = true;
        }

        public void SetIsReturnTypeStub()
        {
            _isReturnTypeStub = true;
        }

        public void SetIsLocalType()
        {
            _isLocalType = true;
        }

        public void SetItemTypeName(string itemTypeName)
        {
            _itemTypeName = itemTypeName;
        }

        public void SetKeyTypeName(string keyTypeName)
        {
            _keyTypeName = keyTypeName;
        }

        public void AddMemberName(string shortName)
        {
            if(_memberNames == null)
            {
                _memberNames =  new global::System.Collections.Generic.Dictionary<string,string>();
            }
            _memberNames.Add(shortName, FullName + "." + shortName);
        }

        public void AddEnumValue(string name, object value)
        {
            if (_enumValues == null)
            {
                _enumValues = new global::System.Collections.Generic.Dictionary<string, object>();
            }
            _enumValues.Add(name, value);
        }
    }

    internal delegate object Getter(object instance);
    internal delegate void Setter(object instance, object value);

    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks", "4.0.0.0")]    
    [System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlMember : global::Windows.UI.Xaml.Markup.IXamlMember
    {
        global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlTypeInfoProvider _provider;
        string _name;
        bool _isAttachable;
        bool _isDependencyProperty;
        bool _isReadOnly;

        string _typeName;
        string _targetTypeName;

        public XamlMember(global::SecretImage.SecretImage_Windows_XamlTypeInfo.XamlTypeInfoProvider provider, string name, string typeName)
        {
            _name = name;
            _typeName = typeName;
            _provider = provider;
        }

        public string Name { get { return _name; } }

        public global::Windows.UI.Xaml.Markup.IXamlType Type
        {
            get { return _provider.GetXamlTypeByName(_typeName); }
        }

        public void SetTargetTypeName(string targetTypeName)
        {
            _targetTypeName = targetTypeName;
        }
        public global::Windows.UI.Xaml.Markup.IXamlType TargetType
        {
            get { return _provider.GetXamlTypeByName(_targetTypeName); }
        }

        public void SetIsAttachable() { _isAttachable = true; }
        public bool IsAttachable { get { return _isAttachable; } }

        public void SetIsDependencyProperty() { _isDependencyProperty = true; }
        public bool IsDependencyProperty { get { return _isDependencyProperty; } }

        public void SetIsReadOnly() { _isReadOnly = true; }
        public bool IsReadOnly { get { return _isReadOnly; } }

        public Getter Getter { get; set; }
        public object GetValue(object instance)
        {
            if (Getter != null)
                return Getter(instance);
            else
                throw new global::System.InvalidOperationException("GetValue");
        }

        public Setter Setter { get; set; }
        public void SetValue(object instance, object value)
        {
            if (Setter != null)
                Setter(instance, value);
            else
                throw new global::System.InvalidOperationException("SetValue");
        }
    }
}


